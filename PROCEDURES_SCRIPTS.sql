SET SERVEROUT ON;

CREATE OR REPLACE PROCEDURE OUTGOING_APW_MPW
AS
--DECLARE
----    CURSOR PART_DATA IS 
----        SELECT PART_ID FROM SCDB.PART WHERE STATUS = 'OPEN';
--    PC CURSOR;
--    PART_CURSOR SYS_REFCURSOR;
--    TEMP_PART SCDB.PART%ROWTYPE;
BEGIN
    DBMS_OUTPUT.PUT_LINE('HELLO WORLD');
    FOR P IN(SELECT * FROM SCDB.PART WHERE STATUS = 'OPEN') 
        LOOP
            DBMS_OUTPUT.PUT_LINE('PID '|| P.PART_ID);
            
            
        END LOOP;
    
    
END;

EXEC OUTGOING_APW_MPW;
--
--DROP PROCEDURE OUTGOING_APW__MPW;

SELECT 
    P.PROG_ID, 
    P.PROG_STATUS, 
    P.AVG_PROD_WEEKLY, 
    P.MAX_PROD_WEEKLY,
    PART_REQ.PART_ID, 
    PART_REQ.REQ 
    FROM PROGRAMS P 
    LEFT JOIN
        (
            SELECT PROG_ID, PART_ID, SUM(QTY_FACTOR) AS REQ FROM PROGRAM_PART GROUP BY PROG_ID,PART_ID
        ) PART_REQ 
        ON P.PROG_ID = PART_REQ.PROG_ID
        ;


SELECT 
    PART_REQ.PART_ID, 
    SUM(P.AVG_PROD_WEEKLY * NVL(PART_REQ.REQ,0)) AS TOTAL_APW,
    SUM(P.MAX_PROD_WEEKLY * NVL(PART_REQ.REQ,0)) AS TOTAL_MPW
    FROM PROGRAMS P 
    LEFT JOIN
        (
            SELECT PROG_ID, PART_ID, SUM(QTY_FACTOR) AS REQ FROM PROGRAM_PART GROUP BY PROG_ID,PART_ID
        ) PART_REQ 
        ON P.PROG_ID = PART_REQ.PROG_ID
        WHERE P.PROG_STATUS IN ('OPEN') AND PART_REQ.PART_ID IS NOT NULL
        GROUP BY PART_REQ.PART_ID
        ;
        
        


SELECT PROG_ID, PART_ID, SUM(QTY_FACTOR) FROM PROGRAM_PART GROUP BY PROG_ID,PART_ID;
