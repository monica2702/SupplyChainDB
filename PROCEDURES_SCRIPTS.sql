SET SERVEROUT ON;

--CREATE OR REPLACE PROCEDURE OUTGOING_APW_MPW
--AS
----DECLARE
------    CURSOR PART_DATA IS 
------        SELECT PART_ID FROM SCDB.PART WHERE STATUS = 'OPEN';
----    PC CURSOR;
----    PART_CURSOR SYS_REFCURSOR;
----    TEMP_PART SCDB.PART%ROWTYPE;
--BEGIN
--    DBMS_OUTPUT.PUT_LINE('HELLO WORLD');
--    FOR P IN(SELECT * FROM SCDB.PART WHERE STATUS = 'OPEN') 
--        LOOP
--            DBMS_OUTPUT.PUT_LINE('PID '|| P.PART_ID);
--            
--            
--        END LOOP;
--    
--    
--END;
--
--EXEC OUTGOING_APW_MPW;
----
--DROP PROCEDURE OUTGOING_APW_MPW;

--SELECT 
--    P.PROG_ID, 
--    P.PROG_STATUS, 
--    P.AVG_PROD_WEEKLY, 
--    P.MAX_PROD_WEEKLY,
--    PART_REQ.PART_ID, 
--    PART_REQ.REQ 
--    FROM PROGRAMS P 
--    LEFT JOIN
--        (
--            SELECT PROG_ID, PART_ID, SUM(QTY_FACTOR) AS REQ FROM PROGRAM_PART GROUP BY PROG_ID,PART_ID
--        ) PART_REQ 
--        ON P.PROG_ID = PART_REQ.PROG_ID
--        ;


SELECT 
    PART_REQ.PART_ID, 
    SUM(P.AVG_PROD_WEEKLY * NVL(PART_REQ.REQ,0)) AS TOTAL_APW,
    SUM(P.MAX_PROD_WEEKLY * NVL(PART_REQ.REQ,0)) AS TOTAL_MPW
    FROM PROGRAMS P 
    LEFT JOIN
        (
            SELECT PROG_ID, PART_ID, SUM(QTY_FACTOR) AS REQ FROM PROGRAM_PART GROUP BY PROG_ID,PART_ID
        ) PART_REQ 
        ON P.PROG_ID = PART_REQ.PROG_ID
        WHERE P.PROG_STATUS IN ('OPEN') AND PART_REQ.PART_ID IS NOT NULL
        GROUP BY PART_REQ.PART_ID
        ;
        

SELECT 
    AP.PART_ID AS PART_id,
    SUM(AP.AVG_PROD_WEEKLY) AS INCOMING_TOTAL_APW,
    SUM(AP.MAX_PROD_WEEKLY) AS INCOMING_TOTAL_MPW   
    FROM SCDB.APPROVAL_DETAILS AP
    GROUP BY AP.PART_ID;


-- VIEW TO GET APW AND PMW VALUES    
SELECT 
    P.PART_ID, 
    P.PART_NAME,  
    P.INVENTORY,
    O.OUT_APW,
    I.IN_APW,
    O.OUT_MPW,
    I.IN_MPW,
    P.QTY_UNIT
FROM SCDB.PART P
    LEFT JOIN(
        SELECT 
        PART_REQ.PART_ID, 
        NVL(SUM(NVL(P.AVG_PROD_WEEKLY,0) * NVL(PART_REQ.REQ,0)),0) AS OUT_APW,
        SUM(NVL(P.MAX_PROD_WEEKLY,0) * NVL(PART_REQ.REQ,0)) AS OUT_MPW
        FROM SCDB.PROGRAMS P 
        LEFT JOIN
        (
            SELECT 
                PROG_ID, 
                PART_ID, 
                SUM(QTY_FACTOR) AS REQ 
                FROM SCDB.PROGRAM_PART 
                GROUP BY PROG_ID,PART_ID
        ) PART_REQ 
        ON P.PROG_ID = PART_REQ.PROG_ID
        WHERE P.PROG_STATUS IN ('OPEN') AND PART_REQ.PART_ID IS NOT NULL
        GROUP BY PART_REQ.PART_ID
    ) O
    ON P.PART_ID = O.PART_ID
    LEFT JOIN(
        SELECT 
            AP.PART_ID AS PART_id,
            SUM(NVL(AP.AVG_PROD_WEEKLY,0)) AS IN_APW,
            SUM(NVL(AP.MAX_PROD_WEEKLY,0)) AS IN_MPW   
            FROM SCDB.APPROVAL_DETAILS AP
            GROUP BY AP.PART_ID
    ) I
    ON P.PART_ID = I.PART_ID;
        
        
SELECT * FROM APPROVAL_DETAILS;        


SELECT PROG_ID, PART_ID, SUM(QTY_FACTOR) FROM PROGRAM_PART GROUP BY PROG_ID,PART_ID;
